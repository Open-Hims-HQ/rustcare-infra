version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: rustcare-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rustcare_dev_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - rustcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: rustcare-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - rustcare-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: rustcare-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-rustcare}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-rustcare_minio_password}
      MINIO_DOMAIN: ${MINIO_DOMAIN:-localhost}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - rustcare-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # NATS Messaging
  nats:
    image: nats:2.10-alpine
    container_name: rustcare-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - ./nats.conf:/etc/nats/nats-server.conf:ro
    networks:
      - rustcare-network
    command: ["--config", "/etc/nats/nats-server.conf"]
    healthcheck:
      test: ["CMD", "nats", "server", "check", "--server", "nats://localhost:4222"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Jaeger Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: rustcare-jaeger
    restart: unless-stopped
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger HTTP
      - "14250:14250"  # Jaeger gRPC
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - rustcare-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:16686"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: rustcare-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - rustcare-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:10.2.0
    container_name: rustcare-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-rustcare_grafana_password}
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - rustcare-network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Stalwart Mail Server (Production-ready)
  stalwart-mail:
    image: stalwartlabs/stalwart:latest
    container_name: rustcare-stalwart
    restart: unless-stopped
    environment:
      STALWART_CONFIG: /opt/stalwart-mail/etc/config.toml
    ports:
      - "25:25"      # SMTP
      - "465:465"    # SMTP over SSL
      - "587:587"    # SMTP Submission
      - "993:993"    # IMAP over SSL
      - "995:995"    # POP3 over SSL
      - "4190:4190"  # ManageSieve
      - "8082:8080"  # Web Admin (changed from 8080 to avoid conflict)
    volumes:
      - stalwart_data:/opt/stalwart-mail
      - ./stalwart:/opt/stalwart-mail/etc:ro
      - ./certs:/opt/stalwart-mail/certs:ro
    networks:
      - rustcare-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "25"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mailhog (Email Testing - for development)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: rustcare-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - rustcare-network
    profiles:
      - dev
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  stalwart_data:
    driver: local

networks:
  rustcare-network:
    driver: bridge